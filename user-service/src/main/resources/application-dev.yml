server:
  port: 8097

spring:
  datasource:
    url: ${USER_SERVICE_DATASOURCE_URL}
    username: ${USER_SERVICE_DATASOURCE_USERNAME}
    password: ${USER_SERVICE_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.github.zapolyarnydev.commons.avro.AvroSerializer
      acks: all
      retries: 3
    consumer:
      group-id: auth-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.github.zapolyarnydev.commons.avro.AvroDeserializer
    properties:
      schema.registry.url: ${SCHEMA_REGISTRY_URL}

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: false
    register-with-eureka: true